name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache tools
        id: cache-tools
        uses: actions/cache@v3
        env:
          cache-name: cache-tools
        with:
          path: tools
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('Makefile') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: microsoft
          java-version: "11"

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install Node dependencies
        run: npm ci

      - name: Install misc tools
        run: |
          brew install coreutils gettext graphicsmagick imagemagick wine-stable

      - name: Set up macOS certificates
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
          MACOS_KEYCHAIN_PASSWORD: ${{ secrets.MACOS_KEYCHAIN_PASSWORD }}
        run: |
          echo "$MACOS_CERTIFICATE" | base64 --decode > certificate.p12
          security create-keychain -p "$MACOS_KEYCHAIN_PASSWORD" release.keychain
          security set-keychain-settings -lut 21600 release.keychain
          security unlock-keychain -p "$MACOS_KEYCHAIN_PASSWORD" release.keychain
          security import certificate.p12 -T /usr/bin/codesign -P "$MACOS_CERTIFICATE_PASSWORD" -k release.keychain
          security set-key-partition-list -s -S apple-tool:,apple:,codesign: -k "$MACOS_KEYCHAIN_PASSWORD" release.keychain
          security list-keychains -d user -s release.keychain login.keychain

      - name: Set up macOS notarytool
        env:
          MACOS_TEAM_ID: ${{ secrets.MACOS_TEAM_ID }}
          MACOS_APPLE_ID: ${{ secrets.MACOS_APPLE_ID }}
          MACOS_NOTARYTOOL_PASSWORD: ${{ secrets.MACOS_NOTARYTOOL_PASSWORD }}
        run: |
          xcrun notarytool store-credentials "AC_PASSWORD" --team-id "$MACOS_TEAM_ID" --apple-id "$MACOS_APPLE_ID" --password "$MACOS_NOTARYTOOL_PASSWORD"

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFOLD_PRIVATE_USERNAME: ${{ secrets.DEFOLD_PRIVATE_USERNAME }}
          DEFOLD_PRIVATE_TOKEN: ${{ secrets.DEFOLD_PRIVATE_TOKEN }}
          MACOS_TEAM_ID: ${{ secrets.MACOS_TEAM_ID }}
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
          BUTLER_PROJECT: ${{ secrets.BUTLER_PROJECT }}
          STEAM_USERNAME: ${{ secrets.STEAM_USERNAME }}
          STEAM_PASSWORD: ${{ secrets.STEAM_PASSWORD }}
          STEAM_APP_ID: ${{ secrets.STEAM_APP_ID }}
          STEAM_COMMON_DEPOT_ID: ${{ secrets.STEAM_COMMON_DEPOT_ID }}
          STEAM_WINDOWS_DEPOT_ID: ${{ secrets.STEAM_WINDOWS_DEPOT_ID }}
          STEAM_MACOS_DEPOT_ID: ${{ secrets.STEAM_MACOS_DEPOT_ID }}
          STEAM_LINUX_DEPOT_ID: ${{ secrets.STEAM_LINUX_DEPOT_ID }}
          STEAM_SSFN_NAME: ${{ secrets.STEAM_SSFN_NAME }}
          STEAM_SSFN_CONTENTS: ${{ secrets.STEAM_SSFN_CONTENTS }}
          STEAM_CONFIG_CONTENTS: ${{ secrets.STEAM_CONFIG_CONTENTS }}
        run: make release

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            dist/**/*.dmg
            dist/**/*.zip
