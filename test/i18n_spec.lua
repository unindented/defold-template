return function()
  local mock = require("deftest.mock.mock")
  local i18n = require("modules.i18n")
  local settings = require("modules.settings")

  describe("i18n", function()
    describe("init", function()
      it("loads the list of languages", function()
        i18n.init()
        assert_same({ "en", "es", "fr" }, i18n.get_language_list())
      end)

      it("uses language in settings when language in settings is supported", function()
        mock.mock(settings)
        settings.get.always_returns("fr")
        i18n.init()
        assert_equal("fr", i18n.get_language())
        mock.unmock(settings)
      end)

      it("uses default when language in settings is not supported", function()
        mock.mock(settings)
        settings.get.always_returns("zu")
        i18n.init()
        assert_equal("en", i18n.get_language())
        mock.unmock(settings)
      end)

      it("uses system language when settings is empty, and system language is supported", function()
        mock.mock(settings)
        settings.get.always_returns(nil)
        mock.mock(sys)
        sys.get_sys_info.always_returns({ language = "fr" })
        i18n.init()
        assert_equal("fr", i18n.get_language())
        mock.unmock(sys)
        mock.unmock(settings)
      end)

      it("uses default when settings is empty, and system language is not supported", function()
        mock.mock(settings)
        settings.get.always_returns(nil)
        mock.mock(sys)
        sys.get_sys_info.always_returns({ language = "zu" })
        i18n.init()
        assert_equal("en", i18n.get_language())
        mock.unmock(sys)
        mock.unmock(settings)
      end)
    end)

    describe("get_language_list", function()
      it("returns the list of supported languages", function()
        i18n.init()
        assert_same({ "en", "es", "fr" }, i18n.get_language_list())
      end)
    end)

    describe("get_language", function()
      it("returns the current language", function()
        i18n.init()
        i18n.set_language("fr")
        assert_equal("fr", i18n.get_language())
      end)
    end)

    describe("get_text", function()
      it("returns the translated text for the current language", function()
        i18n.init()
        i18n.set_language("fr")
        assert_equal("Jouer", i18n.get_text("button_play"))
      end)
    end)
  end)
end
